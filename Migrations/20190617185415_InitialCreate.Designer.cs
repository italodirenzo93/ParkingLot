// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiklParkingApi.Models;

namespace VehiklParkingApi.Migrations
{
    [DbContext(typeof(VehiklParkingContext))]
    [Migration("20190617185415_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("VehiklParkingApi.Models.RateLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan?>("Duration");

                    b.Property<string>("Name");

                    b.Property<decimal>("RateValue");

                    b.HasKey("Id");

                    b.ToTable("RateLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Name = "1hr",
                            RateValue = 3.00m
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 3, 0, 0, 0),
                            Name = "3hr",
                            RateValue = 4.50m
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 6, 0, 0, 0),
                            Name = "6hr",
                            RateValue = 6.75m
                        },
                        new
                        {
                            Id = 4,
                            Name = "ALL DAY",
                            RateValue = 10.125m
                        });
                });

            modelBuilder.Entity("VehiklParkingApi.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Customer");

                    b.Property<DateTimeOffset>("IssuedOn");

                    b.Property<int>("RateLevelId");

                    b.HasKey("Id");

                    b.HasIndex("RateLevelId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer = "Italo Di Renzo",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 6, 17, 4, 54, 15, 93, DateTimeKind.Unspecified).AddTicks(7100), new TimeSpan(0, -4, 0, 0, 0)),
                            RateLevelId = 3
                        },
                        new
                        {
                            Id = 2,
                            Customer = "Tim Berners-Lee",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 6, 17, 10, 54, 15, 93, DateTimeKind.Unspecified).AddTicks(7100), new TimeSpan(0, -4, 0, 0, 0)),
                            RateLevelId = 1
                        },
                        new
                        {
                            Id = 3,
                            Customer = "Leon S. Kennedy",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 6, 17, 1, 54, 15, 93, DateTimeKind.Unspecified).AddTicks(7100), new TimeSpan(0, -4, 0, 0, 0)),
                            RateLevelId = 4
                        },
                        new
                        {
                            Id = 4,
                            Customer = "Gordon Freeman",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 6, 17, 12, 54, 15, 93, DateTimeKind.Unspecified).AddTicks(7100), new TimeSpan(0, -4, 0, 0, 0)),
                            RateLevelId = 1
                        });
                });

            modelBuilder.Entity("VehiklParkingApi.Models.Ticket", b =>
                {
                    b.HasOne("VehiklParkingApi.Models.RateLevel", "RateLevel")
                        .WithMany()
                        .HasForeignKey("RateLevelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
