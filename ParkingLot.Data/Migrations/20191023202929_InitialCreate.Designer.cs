// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingLot.Data;

namespace ParkingLot.Data.Migrations
{
    [DbContext(typeof(ParkingLotDbContext))]
    [Migration("20191023202929_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingLot.Data.Models.RateLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RateValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RateLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 36000000000L,
                            Name = "1hr",
                            RateValue = 3.00m
                        },
                        new
                        {
                            Id = 2,
                            Duration = 108000000000L,
                            Name = "3hr",
                            RateValue = 4.50m
                        },
                        new
                        {
                            Id = 3,
                            Duration = 216000000000L,
                            Name = "6hr",
                            RateValue = 6.75m
                        },
                        new
                        {
                            Id = 4,
                            Name = "ALL DAY",
                            RateValue = 10.125m
                        });
                });

            modelBuilder.Entity("ParkingLot.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("IssuedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("RateLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RateLevelId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer = "Italo Di Renzo",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 10, 23, 10, 29, 28, 862, DateTimeKind.Unspecified).AddTicks(2210), new TimeSpan(0, 0, 0, 0, 0)),
                            RateLevelId = 3
                        },
                        new
                        {
                            Id = 2,
                            Customer = "Tim Berners-Lee",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 10, 23, 16, 29, 28, 862, DateTimeKind.Unspecified).AddTicks(2210), new TimeSpan(0, 0, 0, 0, 0)),
                            RateLevelId = 1
                        },
                        new
                        {
                            Id = 3,
                            Customer = "Leon S. Kennedy",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 10, 23, 7, 29, 28, 862, DateTimeKind.Unspecified).AddTicks(2210), new TimeSpan(0, 0, 0, 0, 0)),
                            RateLevelId = 4
                        },
                        new
                        {
                            Id = 4,
                            Customer = "Gordon Freeman",
                            IssuedOn = new DateTimeOffset(new DateTime(2019, 10, 23, 18, 29, 28, 862, DateTimeKind.Unspecified).AddTicks(2210), new TimeSpan(0, 0, 0, 0, 0)),
                            RateLevelId = 1
                        });
                });

            modelBuilder.Entity("ParkingLot.Data.Models.Ticket", b =>
                {
                    b.HasOne("ParkingLot.Data.Models.RateLevel", "RateLevel")
                        .WithMany()
                        .HasForeignKey("RateLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
